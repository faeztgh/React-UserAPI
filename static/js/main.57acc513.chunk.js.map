{"version":3,"sources":["compnents/profile/index.jsx","compnents/posts/index.jsx","compnents/main/index.jsx","App.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","className","Box","p","Typography","useStyles","makeStyles","root","flexGrow","width","Profile","data","classes","useState","setValue","src","picture","large","alt","Paper","square","name","first","last","location","city","state","timezone","description","postcode","email","dob","age","phone","cell","login","username","password","Tabs","onChange","event","newValue","variant","indicatorColor","textColor","aria-label","scrollButtons","orientation","Tab","icon","Posts","userData","posts","setPosts","loading","setLoading","like","setLike","postsArr","i","push","useEffect","a","axios","res","console","log","fetchData","Skeleton","animation","height","map","item","title","body","onClick","drawerWidth","theme","display","alignItems","justifyContent","margin","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","background","color","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","padding","mixins","StyledBadge","withStyles","badge","backgroundColor","boxShadow","palette","paper","position","top","left","borderRadius","border","content","transform","opacity","Badge","Main","setData","useTheme","auth","open","setOpen","currentPage","setCurrentPage","result","results","Grid","container","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-controls","aria-haspopup","overlap","anchorOrigin","vertical","horizontal","Avatar","noWrap","Drawer","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57acc513.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport CakeIcon from \"@material-ui/icons/Cake\";\r\nimport PhoneIphoneIcon from \"@material-ui/icons/PhoneIphone\";\r\nimport PermContactCalendarIcon from \"@material-ui/icons/PermContactCalendar\";\r\nimport \"./profile.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`nav-tabpanel-${index}`}\r\n            aria-labelledby={`nav-tab-${index}`}\r\n            {...other}\r\n            className=\"tabpanel\"\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n    },\r\n});\r\nconst Profile = (props) => {\r\n    const { data } = props;\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"profile-container\">\r\n                <div className=\"profile-pic\">\r\n                    <img src={data.picture.large} alt=\"\" />\r\n                </div>\r\n                <Paper square className={classes.root}>\r\n                    <TabPanel value={value} index={0}>\r\n                        <div className=\"info-wrapper\">\r\n                            <h2>Hey There, Im </h2>\r\n                            <pre>\r\n                                <span>{data.name.first} </span>\r\n                                <span>{data.name.last}</span>\r\n                            </pre>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <div className=\"info-wrapper\">\r\n                            <h2>My Address is </h2>\r\n                            <pre>\r\n                                <span>{data.location.city} - </span>\r\n                                <span>{data.location.state} - </span>\r\n                                <span>\r\n                                    {data.location.timezone.description} -{\" \"}\r\n                                </span>\r\n                                <span>{data.location.postcode}</span>\r\n                            </pre>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={2}>\r\n                        <div className=\"info-wrapper\">\r\n                            <h2>My Email Address is</h2>\r\n                            <pre>\r\n                                <span>{data.email}</span>\r\n                            </pre>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={3}>\r\n                        <div className=\"info-wrapper\">\r\n                            <pre>\r\n                                <h2>\r\n                                    Im <span>{data.dob.age} </span>\r\n                                    Years old\r\n                                </h2>\r\n                            </pre>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={4}>\r\n                        <div className=\"info-wrapper\">\r\n                            <h2>Contact Me On</h2>\r\n                            <pre className=\"flex-col\">\r\n                                <span>Phone: {data.phone} </span>\r\n                                <span>Cell: {data.cell}</span>\r\n                            </pre>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={5}>\r\n                        <div className=\"info-wrapper\">\r\n                            <h2>Account Info</h2>\r\n                            <pre className=\"flex-col\">\r\n                                <span>Username: {data.login.username}</span>\r\n                                <span>Password: {data.login.password}</span>\r\n                                <span></span>\r\n                            </pre>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={6}>\r\n                        <div className=\"info-wrapper\">\r\n                            <pre>\r\n                                <span></span>\r\n                                <span></span>\r\n                                <span></span>\r\n                            </pre>\r\n                        </div>\r\n                    </TabPanel>\r\n\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        variant=\"scrollable\"\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        aria-label=\"icon tabs example\"\r\n                        scrollButtons=\"desktop\"\r\n                        orientation=\"horizontal\"\r\n                    >\r\n                        <Tab icon={<PersonIcon />} aria-label=\"profile\" />\r\n                        <Tab icon={<RoomIcon />} aria-label=\"sth\" />\r\n                        <Tab icon={<EmailIcon />} aria-label=\"person\" />\r\n                        <Tab icon={<CakeIcon />} aria-label=\"shit\" />\r\n                        <Tab icon={<PhoneIphoneIcon />} aria-label=\"person\" />\r\n                        <Tab\r\n                            icon={<PermContactCalendarIcon />}\r\n                            aria-label=\"person\"\r\n                        />\r\n                    </Tabs>\r\n                </Paper>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./posts.css\";\r\nimport axios from \"axios\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst Posts = (props) => {\r\n    const { userData } = props;\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [like, setLike] = useState(null);\r\n    const postsArr = [];\r\n    for (let i = 0; i < 5; i++) {\r\n        postsArr.push(posts[i]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const res = await axios(\r\n                    \"https://jsonplaceholder.typicode.com/posts\"\r\n                );\r\n                setPosts(res.data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {loading || !posts ? (\r\n                    <div className=\"posts-loading-wrapper\">\r\n                        <div>\r\n                            <Skeleton\r\n                                className=\"mb\"\r\n                                animation=\"wave\"\r\n                                variant=\"circle\"\r\n                                width={50}\r\n                                height={50}\r\n                            />\r\n                            <Skeleton\r\n                                className=\"mb\"\r\n                                animation=\"wave\"\r\n                                variant=\"h1\"\r\n                                width={400}\r\n                                height={30}\r\n                            />\r\n                        </div>\r\n                        <Skeleton\r\n                            animation=\"wave\"\r\n                            variant=\"rect\"\r\n                            width={510}\r\n                            height={200}\r\n                            className=\"mb\"\r\n                        />\r\n                        <Skeleton\r\n                            animation=\"wave\"\r\n                            variant=\"rect\"\r\n                            width={510}\r\n                            height={50}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <h1>All Posts 😍</h1>\r\n                        {postsArr.map((item) => {\r\n                            return (\r\n                                <>\r\n                                    <div className=\"post-wrapper\" key={item.id}>\r\n                                        <div className=\"post-header\">\r\n                                            <span className=\"post-header-pp\">\r\n                                                <img\r\n                                                    src={userData.picture.large}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </span>\r\n                                            <span>\r\n                                                {userData.login.username}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"post-body\">\r\n                                            <h4>\"{item.title}\"</h4>\r\n                                            <p>{item.body}</p>\r\n                                        </div>\r\n                                        <div\r\n                                            className=\"post-footer\"\r\n                                            onClick={() =>\r\n                                                setLike(\r\n                                                    item.id === like\r\n                                                        ? null\r\n                                                        : item.id\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <div\r\n                                                className={\r\n                                                    item.id === like\r\n                                                        ? \"like-btn\"\r\n                                                        : \"unlike-btn\"\r\n                                                }\r\n                                            >\r\n                                                <FavoriteIcon />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        })}\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles, withStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport clsx from \"clsx\";\r\nimport Profile from \"../profile\";\r\nimport Posts from \"../posts\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport \"./main.css\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        width: \"90%\",\r\n        height: \"100vh\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        margin: \"auto\",\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        background: \" rgb(40, 41, 40)\",\r\n        color: \"#fff\",\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: \"nowrap\",\r\n        background: \" rgb(40, 41, 40)\",\r\n        color: \"#fff\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        background: \" rgb(40, 41, 40)\",\r\n        color: \"#fff\",\r\n    },\r\n\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n        background: \"#1f1f1f\",\r\n        color: \"#fff\",\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n}));\r\n\r\n// --------------- Avatar Style----------\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: \"#44b700\",\r\n        color: \"#44b700\",\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        \"&::after\": {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"50%\",\r\n            animation: \"$ripple 1.2s infinite ease-in-out\",\r\n            border: \"1px solid currentColor\",\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    \"@keyframes ripple\": {\r\n        \"0%\": {\r\n            transform: \"scale(.8)\",\r\n            opacity: 1,\r\n        },\r\n        \"100%\": {\r\n            transform: \"scale(2.4)\",\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\nconst Main = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [currentPage, setCurrentPage] = useState(\"profile\");\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await axios(\"https://api.randomuser.me/\");\r\n\r\n                setData(result.data.results[0]);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        fetchData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Grid container spacing={1}>\r\n                <div className={classes.root}>\r\n                    {loading || !data ? (\r\n                        <div className=\"profile-loading-wrapper\">\r\n                            <Skeleton\r\n                                className=\"mb\"\r\n                                animation=\"pulse\"\r\n                                variant=\"circle\"\r\n                                width={160}\r\n                                height={160}\r\n                            />\r\n                            <Skeleton\r\n                                className=\"mb\"\r\n                                animation=\"pulse\"\r\n                                variant=\"h1\"\r\n                                width={400}\r\n                                height={30}\r\n                            />\r\n\r\n                            <Skeleton\r\n                                animation=\"pulse\"\r\n                                variant=\"rect\"\r\n                                width={510}\r\n                                height={100}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <CssBaseline />\r\n                            <AppBar\r\n                                color=\"inherit\"\r\n                                position=\"fixed\"\r\n                                className={clsx(classes.appBar, {\r\n                                    [classes.appBarShift]: open,\r\n                                })}\r\n                            >\r\n                                <Toolbar>\r\n                                    <IconButton\r\n                                        color=\"primary\"\r\n                                        aria-label=\"open drawer\"\r\n                                        onClick={handleDrawerOpen}\r\n                                        edge=\"start\"\r\n                                        className={clsx(classes.menuButton, {\r\n                                            [classes.hide]: open,\r\n                                        })}\r\n                                    >\r\n                                        <MenuIcon />\r\n                                    </IconButton>\r\n                                    {auth && (\r\n                                        <div>\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-controls=\"menu-appbar\"\r\n                                                aria-haspopup=\"true\"\r\n                                                color=\"inherit\"\r\n                                            >\r\n                                                <StyledBadge\r\n                                                    overlap=\"circle\"\r\n                                                    anchorOrigin={{\r\n                                                        vertical: \"bottom\",\r\n                                                        horizontal: \"right\",\r\n                                                    }}\r\n                                                    variant=\"dot\"\r\n                                                >\r\n                                                    <Avatar\r\n                                                        alt={data.name.first}\r\n                                                        src={data.picture.large}\r\n                                                        className={\r\n                                                            classes.large\r\n                                                        }\r\n                                                    />\r\n                                                </StyledBadge>\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    )}\r\n                                    <Typography variant=\"h6\" noWrap>\r\n                                        <span>{data.name.title}. </span>\r\n                                        <span>{data.name.first} </span>\r\n                                        <span>{data.name.last} </span>\r\n                                    </Typography>\r\n                                </Toolbar>\r\n                            </AppBar>\r\n                            <Drawer\r\n                                variant=\"permanent\"\r\n                                className={clsx(classes.drawer, {\r\n                                    [classes.drawerOpen]: open,\r\n                                    [classes.drawerClose]: !open,\r\n                                })}\r\n                                classes={{\r\n                                    paper: clsx({\r\n                                        [classes.drawerOpen]: open,\r\n                                        [classes.drawerClose]: !open,\r\n                                    }),\r\n                                }}\r\n                            >\r\n                                <div className={classes.toolbar}>\r\n                                    <IconButton onClick={handleDrawerClose}>\r\n                                        {theme.direction === \"rtl\" ? (\r\n                                            <ChevronRightIcon />\r\n                                        ) : (\r\n                                            <ChevronLeftIcon />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </div>\r\n                                <Divider />\r\n                                <List>\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            setCurrentPage(\"profile\")\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon>\r\n                                            <AccountCircle color=\"primary\" />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={\"Profile\"} />\r\n                                    </ListItem>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() => setCurrentPage(\"posts\")}\r\n                                    >\r\n                                        <ListItemIcon>\r\n                                            <PostAddIcon color=\"primary\" />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={\"Posts\"} />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Drawer>\r\n                            <main className={classes.content}>\r\n                                <div className={classes.toolbar} />\r\n                            </main>\r\n                            {currentPage === \"profile\" && (\r\n                                <Profile data={data} />\r\n                            )}\r\n                            {currentPage === \"posts\" && (\r\n                                <Posts userData={data} />\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport {Main} from \"./compnents\";\n\nconst App = () => {\n    return (\n        <>\n            <Main />\n        </>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// eslint-disable-next-line no-unused-vars\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}